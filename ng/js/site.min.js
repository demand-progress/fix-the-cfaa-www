+function($) {
    "use strict";
    var Modal = function(element, options) {
        this.options = options;
        this.$element = $(element);
        this.$backdrop = this.isShown = null;
        if (this.options.remote) this.$element.load(this.options.remote);
    };
    Modal.DEFAULTS = {
        backdrop: true,
        keyboard: true,
        show: true
    };
    Modal.prototype.toggle = function(_relatedTarget) {
        return this[!this.isShown ? "show" : "hide"](_relatedTarget);
    };
    Modal.prototype.show = function(_relatedTarget) {
        var that = this;
        var e = $.Event("show.bs.modal", {
            relatedTarget: _relatedTarget
        });
        this.$element.trigger(e);
        if (this.isShown || e.isDefaultPrevented()) return;
        this.isShown = true;
        this.escape();
        this.$element.on("click.dismiss.modal", '[data-dismiss="modal"]', $.proxy(this.hide, this));
        this.backdrop(function() {
            var transition = $.support.transition && that.$element.hasClass("fade");
            if (!that.$element.parent().length) {
                that.$element.appendTo(document.body);
            }
            that.$element.show();
            if (transition) {
                that.$element[0].offsetWidth;
            }
            that.$element.addClass("in").attr("aria-hidden", false);
            that.enforceFocus();
            var e = $.Event("shown.bs.modal", {
                relatedTarget: _relatedTarget
            });
            transition ? that.$element.find(".modal-dialog").one($.support.transition.end, function() {
                that.$element.focus().trigger(e);
            }).emulateTransitionEnd(300) : that.$element.focus().trigger(e);
        });
    };
    Modal.prototype.hide = function(e) {
        if (e) e.preventDefault();
        e = $.Event("hide.bs.modal");
        this.$element.trigger(e);
        if (!this.isShown || e.isDefaultPrevented()) return;
        this.isShown = false;
        this.escape();
        $(document).off("focusin.bs.modal");
        this.$element.removeClass("in").attr("aria-hidden", true).off("click.dismiss.modal");
        $.support.transition && this.$element.hasClass("fade") ? this.$element.one($.support.transition.end, $.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal();
    };
    Modal.prototype.enforceFocus = function() {
        $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function(e) {
            if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
                this.$element.focus();
            }
        }, this));
    };
    Modal.prototype.escape = function() {
        if (this.isShown && this.options.keyboard) {
            this.$element.on("keyup.dismiss.bs.modal", $.proxy(function(e) {
                e.which == 27 && this.hide();
            }, this));
        } else if (!this.isShown) {
            this.$element.off("keyup.dismiss.bs.modal");
        }
    };
    Modal.prototype.hideModal = function() {
        var that = this;
        this.$element.hide();
        this.backdrop(function() {
            that.removeBackdrop();
            that.$element.trigger("hidden.bs.modal");
        });
    };
    Modal.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null;
    };
    Modal.prototype.backdrop = function(callback) {
        var that = this;
        var animate = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var doAnimate = $.support.transition && animate;
            this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />').appendTo(document.body);
            this.$element.on("click.dismiss.modal", $.proxy(function(e) {
                if (e.target !== e.currentTarget) return;
                this.options.backdrop == "static" ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this);
            }, this));
            if (doAnimate) this.$backdrop[0].offsetWidth;
            this.$backdrop.addClass("in");
            if (!callback) return;
            doAnimate ? this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150) : callback();
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            $.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one($.support.transition.end, callback).emulateTransitionEnd(150) : callback();
        } else if (callback) {
            callback();
        }
    };
    var old = $.fn.modal;
    $.fn.modal = function(option, _relatedTarget) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.modal");
            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == "object" && option);
            if (!data) $this.data("bs.modal", data = new Modal(this, options));
            if (typeof option == "string") data[option](_relatedTarget); else if (options.show) data.show(_relatedTarget);
        });
    };
    $.fn.modal.Constructor = Modal;
    $.fn.modal.noConflict = function() {
        $.fn.modal = old;
        return this;
    };
    $(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(e) {
        var $this = $(this);
        var href = $this.attr("href");
        var $target = $($this.attr("data-target") || href && href.replace(/.*(?=#[^\s]+$)/, ""));
        var option = $target.data("modal") ? "toggle" : $.extend({
            remote: !/#/.test(href) && href
        }, $target.data(), $this.data());
        e.preventDefault();
        $target.modal(option, this).one("hide", function() {
            $this.is(":visible") && $this.focus();
        });
    });
    $(document).on("show.bs.modal", ".modal", function() {
        $(document.body).addClass("modal-open");
    }).on("hidden.bs.modal", ".modal", function() {
        $(document.body).removeClass("modal-open");
    });
}(window.jQuery);

var fixTheCfaaApp = angular.module("fixTheCfaaApp", [ "ngRoute", "fixTheCfaaControllers" ]);

fixTheCfaaApp.config([ "$routeProvider", function($routeProvider) {
    $routeProvider.when("/history", {
        templateUrl: "partials/home.html",
        controller: "MainCtrl"
    }).when("/victims", {
        templateUrl: "partials/victims.html",
        controller: "MainCtrl"
    }).when("/solution", {
        templateUrl: "partials/solution.html",
        controller: "MainCtrl"
    }).when("/thanks", {
        templateUrl: "partials/thanks.html",
        controller: "MainCtrl"
    }).otherwise({
        redirectTo: "/history"
    });
} ]);

var fixTheCfaaControllers = angular.module("fixTheCfaaControllers", []);

fixTheCfaaControllers.controller("MainCtrl", [ "$scope", "$route", "$location", function($scope, $route, $location) {
    $scope.$route = $route;
    $scope.isActive = function(key) {
        return key === $location.path().replace("/", "");
    };
    $scope.formVersion = Math.random() > .5 ? 1 : 2;
} ]);

jQuery.support.placeholder = function() {
    var i = document.createElement("input");
    return "placeholder" in i;
}();

$(function() {
    if (!$.support.placeholder) {
        $(":input[title]").each(function() {
            var $this = $(this);
            if ($this.val() === "") {
                $this.val($this.attr("title"));
            }
            $this.focus(function() {
                if ($this.val() === $this.attr("title")) {
                    $this.val("");
                }
            });
            $this.blur(function() {
                if ($this.val() === "") {
                    $this.val($this.attr("title"));
                }
            });
        });
    }
    $(window).resize(function() {
        var w = $(window).width();
        var h = w / 2;
        $(".header").height(h);
        var pt = h / 5;
        if (w > 992) pt = h / 7 * 2; else if (w < 767) pt = 50;
        $(".header .wrap").css("padding-top", pt);
        $("#top_form").css("marginTop", $("#80s").outerHeight() - $("#top_form").height() - 30);
    }).resize();
    $(".dp-horiz-signup-form").submit(function() {
        var formVersion = angular.element($(this)).scope().formVersion;
        var action = formVersion === 1 ? "header-footer" : "top-header";
        var location = $(this).closest(".form-location").attr("class").match(/loc-([^\s]+)/)[1];
        if (ga) {
            ga("send", "event", "signup", action, location);
        }
        return true;
    });
});